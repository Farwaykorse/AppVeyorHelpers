##====---- appveyor.yml                                               ----====##
shallow_clone: true

skip_branch_with_pr: true
skip_commits:
  files:
  - .git*
  - LICENSE
  - '**/*.md'

image:
- Visual Studio 2017

configuration:
- PowerShell
- PowerShell_Core

matrix:
  allow_failures:
  - configuration: PowerShell_Core

for:
-
  matrix:
    only:
    - configuration: PowerShell
  install:
  - ps: Import-Module -Name .\AppVeyorHelpers.psd1
  - ps: Install-Module Pester -Force
  - ps: Get-Module Pester -ListAvailable
  build_script:
  - ps: $BuildName = 'placeholder'
  - ps: .\RunTests.ps1
  test_script:
  - ps: Assert-ValidCodecovYML
  - ps: |
      if ($BuildName -ne 'placeholder') {
        Send-Message -Error 'BuildName escaped RunTests.ps1' -Details $BuildName
      }
-
  matrix:
    only:
    - configuration: PowerShell_Core
  install:
  - pwsh: Import-Module -Name .\AppVeyorHelpers.psd1
  - pwsh: Install-Module Pester -Force
  - pwsh: Get-Module Pester -ListAvailable
  build_script:
  - pwsh: $BuildName = 'placeholder'
  - pwsh: .\RunTests.ps1
  test_script:
  - pwsh: Assert-ValidCodecovYML
  - pwsh: |
      if ($BuildName -ne 'placeholder') {
        Send-Message -Error 'BuildName escaped RunTests.ps1' -Details $BuildName
      }


##====--------------------------------------------------------------------====##
# Common Scripts
init:
- ps: |
    Write-Output ('-- CI Session Configuration --' + "`n" + 'OS / platform: ' +
      $((Get-WmiObject Win32_OperatingSystem).Name -split "[|]" |
        Select-Object -First 1) + ' / ' +
      $((Get-WmiObject Win32_OperatingSystem).OSArchitecture) + "`n" +
      'Image:         ' + $env:APPVEYOR_BUILD_WORKER_IMAGE + "`n" +
      'Configuration: ' + $env:CONFIGURATION
    )
    Write-Output ('PowerShell v' + $PSVersionTable.PSVersion.ToString())
    Write-Output ('Initial path: ' + $pwd.Path)
- pwsh: |
    Write-Output ('PowerShell Core v' + $PSVersionTable.PSVersion.ToString())
    Write-Output ('Initial path: ' + $pwd.Path)
- ps: |
    $ps_var = $true
    $env:ps_env_var = $true
    cd ..; $pwd.Path
- pwsh: |
    $pwsh_var = $true
    $pwsh_env_var = $true
    cd ..; $pwd.Path
- ps: |
    if ($pwsh_var) {
      Write-Output 'PowerShell Core variables are available in PowerShell.'
    }
    if ($pwsh_env_var) {
      Write-Output 'PowerShell Core env variables are available in PowerShell.'
    }
- pwsh: |
    if ($ps_var) {
      Write-Output 'PowerShell variables are available in PowerShell Core.'
    }
    if ($pwsh_env_var) {
      Write-Output 'PowerShell env variables are available in PowerShell Core.'
    }
- cd %APPVEYOR_BUILD_FOLDER%
